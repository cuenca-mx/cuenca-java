name: Build test with maven

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    # Release only if last commit message contains keyword 'PUBLISH' [not case-sensitive]
    if: "contains(github.event.head_commit.message, 'PUBLISH')"
    strategy:
      matrix:
        java-version: ['11', '16', '17']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11, 16 y 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version}}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: |
          mvn \
          --batch-mode \
          clean test

  publish:
    needs: test
    name: Bump maven version, release on Github and Maven Central
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Java with Maven
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USER_NAME
          server-password: MAVEN_PASSWORD
        env:
          MAVEN_USER_NAME: ${{ secrets.MAVEN_USER_NAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Configure GPG Key
        run: echo ${{ secrets.REPO_SECRET }} | sed 's/./& /g'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: List keys
        run: gpg -K

      - name: Publish to Maven Central
        run: |
          echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" gpg --batch --import |
          gpg --list-secret-keys --keyid-format LONG |
          mvn \
          --no-transfer-progress \
          --batch-mode \
          -Dgpg.passphrase-$OSSRH_GPG_SECRET_KEY_PASSWORD \
          -DskipTests \
          -Prelease \
          clean deploy \

        env:
          MAVEN_USER_NAME: ${{ secrets.MAVEN_USER_NAME}}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD}}
          OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          OSSRH_GPG_SECRET_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY}}




